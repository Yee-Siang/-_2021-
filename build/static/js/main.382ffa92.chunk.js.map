{"version":3,"sources":["api.js","memo.js","learning.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","URL","window","location","origin","toString","Memo","props","user","useState","newTodo","setNewTodo","Date","newDate","setNewDate","data","todos","setTodos","now","setNow","handleNewTodo","a","console","log","message","error","post","todo","date","newT","newSort","sort","b","Day","success","handleClear","range","afterDelete","filter","t","State","deleteOne","task","Todo","changeState","map","dataSource","i","length","push","state","key","columns","title","dataIndex","width","render","record","icon","ClockCircleOutlined","onClick","style","cursor","CheckCircleOutlined","color","textDecoration","display","String","split","type","shape","ghost","danger","size","DeleteOutlined","marginLeft","setColor","flexDirection","Group","compact","margin","onChange","e","Search","value","placeholder","onSearch","target","enterButton","marginBottom","justifyContent","borderColor","pagination","pageSize","Learning","allData","setAllData","feature","setFeature","showData","setShowData","find","setFind","newWord","setNewWord","newAnswer","setNewAnswer","problemsNum","setProblemsNum","isModalVisible","setIsModalVisible","problemsList","setProblemsList","answerList","setAnswerList","currentP","setCurrentP","p","setP","choosenAns","setChoosenAns","score","setScore","isModalVisible_2","setIsModalVisible_2","handleTest","handleOk","problemsList_temp","newNum","Math","floor","random","includes","word","ans_temp","test","fontSize","fontWeight","lineHeight","name","direction","answer","handleAdd","newD","handleDelete","dataFilter","dictionary","visible","onOk","onCancel","okText","cancelText","App","PageState","setPageState","LoginUserID","setLoginUserID","LoginUserPassword","setLoginUserPassword","SignupUserID","setSignupUserID","SignupUserPassword","setSignupUserPassword","SignupNickname","setSignupNickname","SignupSchool","setSignupSchool","SignupBirthday","setSignupBirthday","SignupAboutMe","setSignupAboutMe","HasLogin","setHasLogin","NowUserID","setNowUserID","NowUserPassword","setNowUserPassword","NowNickname","setNowNickname","NowSchool","setNowSchool","NowBirthday","setNowBirthday","NowAboutMe","setNowAboutMe","OldUserPassword","setOldUserPassword","NewUserPassword","setNewUserPassword","SystemMessage","setSystemMessage","setSystemDescription","setSystemMessageType","SiderLogo","setSiderLogo","SiderOnCollapse","setSiderOnCollapse","NewCostTitle","setNewCostTitle","NewCostIsOutcome","setNewCostIsOutcome","NewCostMoney","setNewCostMoney","NewCostTag","setNewCostTag","NewCostDay","setNewCostDay","NewNickname","setNewNickname","NewSchool","setNewSchool","NewBirthday","setNewBirthday","NewAboutMe","setNewAboutMe","MyCost","setMyCost","MemoData","setMemoData","resetTodo","UserID","Todos","WordData","setWordData","resetWord","words","handleCreateNewUser","Message","SignupSuccess","handleUsersLogin","LoginSuccess","UserPassword","Nickname","School","Birthday","AboutMe","handleChangePersonalInfo","ChangePersonalInfoSuccess","handleChangePassword","ChangePasswordSuccess","handleCreateNewCost","CreateNewCostSuccess","handleCheckMyCost","CheckMyCostSuccess","AllMyCost","Title","IsOutcome","Money","Tag","_id","handleDeleteMyCost","MonthToNumber","Month","handleSiderCollapse","handleTotalOutcome","sum","handleTotalIncome","WelcomePage","Content","prefix","UserOutlined","disabled","LoginPage","textAlign","marginTop","SignupPage","TextArea","rows","PersonalInfoPage","bordered","column","Item","label","MemoPage","SpendingPage","NewCostPage","AccountBookOutlined","addonBefore","AimOutlined","CheckMyCostPage","filters","text","onFilter","isoutcome","sorter","day","money","tag","showIcon","ChatroomPage","LearningPage","NormalSettingPage","KeyOutlined","ChangePersonalInfoPage","defaultValue","EyeInvisibleOutlined","moment","AccountSettingPage","ChangePasswordPage","SignoutPage","CarOutlined","Sider","collapsible","onCollapse","background","height","theme","defaultSelectedKeys","mode","AuditOutlined","DollarOutlined","ReadOutlined","SubMenu","SettingOutlined","PieChartOutlined","ToolOutlined","closable","footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.382ffa92.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: new URL('/', window.location.origin).toString(),\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Input, DatePicker, Button, Space, Table, message, Tag, Tabs } from \"antd\";\r\nimport { CheckCircleOutlined, ClockCircleOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\n\r\nfunction Memo(props) {\r\n  const user = props.user;\r\n  const axios = props.axios;\r\n  //console.log(props.data);\r\n\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [newDate, setNewDate] = useState(Date());\r\n  const [todos, setTodos] = useState(props.data);\r\n  const [now, setNow] = useState(\"All\");\r\n\r\n  //新增 todo\r\n  const handleNewTodo = async () => {\r\n    console.log(newTodo);\r\n    console.log(newDate);\r\n    if (!newTodo || !newDate) {\r\n      message.error(\"Missing Due date or Task\");\r\n      return\r\n    }\r\n    const { data } = await axios.post(\"/api/newTodo\", { user: user, todo: newTodo, date: newDate });\r\n    console.log(data);\r\n    if (data.message === \"Success\") {\r\n      const newT = [...todos, data];\r\n      const newSort = newT.sort((a, b) => new Date(a.Day) - new Date(b.Day));\r\n      setTodos(newSort);\r\n      message.success(\"New task added\");\r\n    }\r\n    else if (data.message === \"Repeated Todo\") {\r\n      message.error(\"This task already exists\");\r\n    }\r\n  }\r\n  //刪除所有 todos\r\n  const handleClear = async (range) => {\r\n    const { data } = await axios.post(\"/api/clearAllTodos\", { user: user, range: range });\r\n    console.log(data);\r\n    if (data.message === \"clear all success\") {\r\n      setTodos([]);\r\n      message.success(\"Clear all success\");\r\n    }\r\n    else if (data.message === \"clear complete success\") {\r\n      let afterDelete = todos.filter(t => t.State == \"Active\");\r\n      setTodos(afterDelete);\r\n      message.success(\"Clear complete success\");\r\n    }\r\n    else {\r\n      message.error(\"Clear tasks failed\");\r\n    }\r\n  }\r\n  //刪除指定 todo\r\n  const deleteOne = async (task, date) => {\r\n    //console.log(task);\r\n    const { data } = await axios.post(\"/api/deleteOneTodo\", { user: user, task: task, date: date });\r\n    //console.log(data);\r\n    if (data.message === \"delete one success\") {\r\n      setTodos([]);\r\n      message.success(\"Delete Todo success\")\r\n    }\r\n    else {\r\n      message.error(\"Delete Todo failed\")\r\n    }\r\n    let afterDelete = todos.filter(t => t.Todo != task || t.Day != date);\r\n    setTodos(afterDelete);\r\n  }\r\n  //變換 todo State\r\n  const changeState = async (task, date) => {\r\n    //console.log(task);\r\n    const { data } = await axios.post(\"/api/changeTodoState\", { user: user, task: task, date: date });\r\n    //console.log(data);\r\n    if (data.message == \"change State success\") {\r\n      setTodos([]);\r\n      message.success(\"Update success\")\r\n    }\r\n    else {\r\n      message.error(\"Updated failed\")\r\n    }\r\n    setTodos(todos.map(t => {\r\n      if (t.Todo === task) {\r\n        if (t.State == \"Active\") return { ...t, State: \"Complete\" };\r\n        else return { ...t, State: \"Active\" };\r\n      }\r\n      else return t\r\n    }))\r\n  }\r\n  //顯示 todos\r\n  const dataSource = [];\r\n  for (let i = 0; i < todos.length; i++) {\r\n    let t = todos[i];\r\n    if (now === \"All\" || t.State == now) {\r\n      dataSource.push({ task: t.Todo, date: t.Day, state: t.State, key: i });\r\n    }\r\n  };\r\n  const columns = [\r\n    {\r\n      title: 'State', dataIndex: 'state', key: 'state', width: \"8rem\", render: (state, record) => (\r\n        state == \"Active\" ?\r\n          <Tag icon={<ClockCircleOutlined />} onClick={() => { changeState(record.task, record.date) }} style={{ cursor: \"pointer\", width: \"5.5rem\" }}>{state}</Tag> :\r\n          <Tag icon={<CheckCircleOutlined />} color=\"success\" onClick={() => { changeState(record.task, record.date) }} style={{ cursor: \"pointer\", width: \"5.5rem\" }}>{state}</Tag>\r\n      )\r\n    },\r\n    {\r\n      title: `Tasks-${now}`, dataIndex: 'task', key: 'task', render: (task, record) => (\r\n        record.state == \"Active\" ?\r\n          <span >{task}</span> :\r\n          <span style={{ textDecoration: 'line-through', color: \"gray\" }}>{task}</span>\r\n      )\r\n    },\r\n    {\r\n      title: 'Due date', dataIndex: 'date', key: 'date', width: \"9rem\", render: (date, record) => (\r\n        <span style={{ display: \"flex\" }}>{`${String(date).split(\"T\")[0]}`}\r\n          <Button type=\"primary\" shape=\"circle\" ghost={true} danger={true} size=\"small\"\r\n            icon={<DeleteOutlined />} style={{ marginLeft: \"auto\" }} onClick={() => { deleteOne(record.task, date) }} />\r\n        </span>\r\n\r\n      )\r\n    },\r\n  ];\r\n  //render\r\n  const [color, setColor] = useState([1,0,0]);\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\"}}>\r\n      <Input.Group compact style={{ width: '98%', margin: \"1%\" }}>\r\n        <DatePicker\r\n          style={{ width: '30%'}}\r\n          onChange={(e) => {\r\n            //console.log(String(e))\r\n            setNewDate(e)\r\n          }} />\r\n        <Input.Search\r\n          value={newTodo}\r\n          style={{ width: '70%' }}\r\n          placeholder=\"Type yous task here\"\r\n          onSearch={(e) => { handleNewTodo(); setNewTodo(\"\") }}\r\n          onChange={(e) => { setNewTodo(e.target.value) }}\r\n          enterButton=\"Add\" />\r\n      </Input.Group>\r\n      <Space style={{ width: '98%', marginLeft: \"1%\", marginBottom: \"1%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\"}}>\r\n        <Space>\r\n          <Button type={color[0]? \"primary\":\"default\"} style={{ width: '8rem' }} onClick={() => { setNow(\"All\"); setColor([1,0,0])}}>All</Button>\r\n          <Button type={color[1]? \"primary\":\"default\"} style={{ width: '8rem' }} onClick={() => { setNow(\"Active\"); setColor([0,1,0])}}>Active</Button>\r\n          <Button type={color[2]? \"primary\":\"default\"} style={{ width: '8rem' }} onClick={() => { setNow(\"Complete\"); setColor([0,0,1])}}>Complete</Button>\r\n        </Space>\r\n        <Space>\r\n          <Button type=\"default\" ghost style={{ width: '8rem', color: \"green\", borderColor: \"green\"}} onClick={() => { handleClear(\"Complete\") }}>Clear Complete</Button>\r\n          <Button type=\"primary\" ghost danger style={{ width: '8rem' }} onClick={() => { handleClear(\"All\") }}>Clear All</Button>\r\n        </Space>\r\n      </Space>\r\n      <Table dataSource={dataSource} columns={columns} pagination={{ pageSize: 6 }} style={{ width: '98%', marginLeft: \"1%\", marginBottom: \"1%\" }}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Memo;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {Input, Button, Space, Table, message, Modal, Radio} from \"antd\";\r\nimport {CheckCircleOutlined, ClockCircleOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\n\r\nconst data_test = [\r\n  {word: \"apple\", answer: \"蘋果\", key:1},\r\n  {word: \"banana\", answer: \"香蕉\", key:2},\r\n  {word: \"cherry\", answer: \"櫻桃\", key:3},\r\n  {word: \"coconut\", answer: \"椰子\", key:4},\r\n  {word: \"grape\", answer: \"葡萄\", key:5},\r\n  {word: \"lemon\", answer: \"檸檬\", key:6},\r\n  {word: \"papaya\", answer: \"木瓜\", key:7}\r\n]\r\n\r\nfunction Learning(props) {\r\n  const user = props.user;\r\n  const axios = props.axios;\r\n  //console.log(props.data);\r\n  //所有單字\r\n  const [allData, setAllData] = useState(props.data);\r\n  //目前在哪個功能\r\n  const [feature, setFeature] = useState(\"dictionary\");\r\n  //目前展示的單字\r\n  const [showData, setShowData] = useState(props.data);\r\n  const [find, setFind] = useState();\r\n  const [newWord, setNewWord] = useState(\"\");\r\n  const [newAnswer, setNewAnswer] = useState(\"\");\r\n  //////////////////////測驗功能//////////////////////\r\n  //測驗題目數\r\n  const [problemsNum, setProblemsNum] = useState(5);\r\n  //是否彈出選擇測驗題目數量視窗\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  //隨機選題目\r\n  const [problemsList, setProblemsList] = useState([]);\r\n  //隨機選3個正確答案外的選項\r\n  const [answerList, setAnswerList] = useState([]);\r\n  //目前在哪一題\r\n  const [currentP, setCurrentP] = useState(0);\r\n  const [p, setP] = useState(\"\");\r\n  //選擇的答案\r\n  const [choosenAns, setChoosenAns] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  //是否彈出測驗結束視窗\r\n  const [isModalVisible_2, setIsModalVisible_2] = useState(false);\r\n  const handleTest = async() => {\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    if (problemsNum > allData.length) {\r\n      message.error(\"Problems number out of range\")\r\n    }\r\n    else {\r\n      //隨機選題目\r\n      let problemsList_temp = [];\r\n      while (problemsList_temp.length < problemsNum) {\r\n        const newNum = Math.floor(Math.random()*allData.length);\r\n        if (!problemsList_temp.includes(newNum)) {\r\n          problemsList_temp.push(newNum);\r\n        }\r\n      }\r\n      setProblemsList(problemsList_temp);\r\n      console.log(problemsList_temp);\r\n      setP(allData[problemsList_temp[0]].word);\r\n      //隨機選答案\r\n      let ans_temp = [problemsList_temp[0]];\r\n      while (ans_temp.length < 4) {\r\n        const newNum = Math.floor(Math.random()*allData.length);\r\n        if (!ans_temp.includes(newNum)) {\r\n          ans_temp.push(newNum);\r\n        }\r\n      }\r\n      setAnswerList(ans_temp.sort());\r\n      setFeature(\"test\");\r\n      setCurrentP(0);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  //測驗結束視窗的按鈕\r\n  const handleCancel_2 = () => {\r\n    setScore(0);\r\n    setIsModalVisible_2(false);\r\n    setFeature(\"dictionary\");\r\n  };\r\n\r\n  const handleOk_2 = () => {\r\n    setScore(0);\r\n    setIsModalVisible_2(false);\r\n    handleOk();\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (currentP < problemsNum-1) {\r\n      if (choosenAns == problemsList[currentP]) {\r\n        message.success(\"Correct!\");\r\n        setScore(score + 1);\r\n      }\r\n      else {\r\n        message.error(`Sorry, the answer is ${allData[problemsList[currentP]].answer}`);\r\n      }\r\n      setCurrentP(currentP + 1);\r\n      //console.log(problemsList[currentP+1]);\r\n      setP(allData[problemsList[currentP+1]].word);\r\n      //隨機選答案\r\n      let ans_temp = [problemsList[currentP+1]];\r\n      while (ans_temp.length < 4) {\r\n        const newNum = Math.floor(Math.random()*allData.length);\r\n        if (!ans_temp.includes(newNum)) {\r\n          ans_temp.push(newNum);\r\n        }\r\n      }\r\n      setAnswerList(ans_temp.sort());\r\n    }\r\n    else if (currentP == problemsNum-1) {\r\n      if (choosenAns == problemsList[currentP]) {\r\n        message.success(\"Correct!\");\r\n        setScore(score + 1);\r\n      }\r\n      else {\r\n        message.error(`Sorry, the answer is ${allData[problemsList[currentP]].answer}`);\r\n      }\r\n      setIsModalVisible_2(true);\r\n    }\r\n    setChoosenAns(-1);\r\n  };\r\n  const test = (\r\n    <>\r\n      <p style={{fontSize:\"2rem\", fontWeight:\"100\", lineHeight: \"2rem\", marginLeft: \"1rem\", marginBottom: \"1rem\"}}>What does {p} mean ?</p>\r\n      <Radio.Group name=\"radiogroup\" value={choosenAns} style={{marginLeft: \"1rem\"}} onChange={(e) => {setChoosenAns(e.target.value)}}>\r\n        <Space direction=\"vertical\">\r\n          {answerList.map((p,i) => <Radio value={p}>{allData[p].answer}</Radio>)}\r\n          <Button onClick={handleSubmit} type=\"primary\">Submit</Button>\r\n        </Space>\r\n      </Radio.Group>\r\n      \r\n    </>\r\n  )\r\n  ////////////////////////////////////////////////////\r\n  //搜尋單字\r\n  const handleSearch = () => {\r\n    const dataFilter = allData.filter((data) => {return data.word.includes(find) || data.answer.includes(find)});\r\n    //onsole.log(dataFilter);\r\n    setShowData(dataFilter);\r\n    setFind(\"\");\r\n  };\r\n  //新增單字\r\n  const handleAdd = async() => {\r\n    const {data} = await axios.post(\"/api/newWord\", {user: user, word: newWord, answer: newAnswer});\r\n    console.log(data.message);\r\n    if (data.message == \"adding success\") {\r\n      message.success(\"adding success\");\r\n      const newD = [{word: newWord, answer: newAnswer, key: newWord}, ...allData];\r\n      setAllData(newD);\r\n      setShowData(newD);\r\n    }\r\n    else  {\r\n      message.error(data.message);\r\n      setShowData(allData);\r\n    }\r\n    setNewWord(\"\");\r\n    setNewAnswer(\"\");\r\n  };\r\n  //刪除單字\r\n  const handleDelete = async(word) => {\r\n    console.log(word);\r\n    const {data} = await axios.post(\"/api/deleteWord\", {user: user, word: word});\r\n    console.log(data.message);\r\n    if (data.message == \"delete success\") {\r\n      const dataFilter = allData.filter((data) => {return data.word != word});\r\n      setAllData(dataFilter);\r\n      setShowData(dataFilter);\r\n      message.success(data.message);\r\n    }\r\n    else {\r\n      message.error(data.message);\r\n    }\r\n  };\r\n  //用 Table 顯示\r\n  const columns = [\r\n    {title: 'Words',dataIndex: 'word',key: 'word', width: \"50%\"},\r\n    {title: 'Translation',dataIndex: 'answer',key: 'answer', width: \"50%\", render: (answer, record) => (\r\n      <span style={{display: \"flex\"}}>{answer}\r\n      <Button type=\"primary\" shape=\"circle\" ghost={true} danger={true} size=\"small\"\r\n              icon={<DeleteOutlined />} style={{marginLeft: \"auto\"}} onClick={() => {handleDelete(record.word)}}/>\r\n      </span>\r\n    )}\r\n  ];\r\n  //字典功能頁面\r\n  const dictionary = (\r\n    <>\r\n      <Input.Search\r\n          value={find}\r\n          style={{ width: '100%' }}\r\n          placeholder=\"Search a word\"\r\n          onSearch={handleSearch}\r\n          onChange={(e) => {setFind(e.target.value)}}\r\n          style={{ width: \"98%\", marginLeft: \"1%\", marginBottom: \"0.2rem\"}}\r\n          enterButton/>\r\n      <Input.Group compact style={{ width: \"98%\", marginLeft: \"1%\", marginBottom: \"0.2rem\"}}>\r\n        <Input\r\n          value={newWord}\r\n          style={{ width: '50%' }}\r\n          onChange={(e) => {setNewWord(e.target.value)}}\r\n          placeholder=\"Add a new word\"/>\r\n        <Input.Search\r\n          value={newAnswer}\r\n          style={{ width: '50%' }}\r\n          onChange={(e) => {setNewAnswer(e.target.value)}}\r\n          onSearch={handleAdd}\r\n          enterButton=\"Add\"\r\n          placeholder=\"What does it mean?\"/>\r\n      </Input.Group>\r\n      <Table dataSource={showData} columns={columns} pagination={{pageSize: 6}} style={{ width: \"98%\", marginLeft: \"1%\", marginBottom: \"1rem\"}}/>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Space style={{ width: \"98%\", margin: \"1%\"}}>\r\n        <Button style={{ width: '8rem' }} onClick={() => {setFeature(\"dictionary\")}}>Dictionary</Button>\r\n        <Button style={{ width: '8rem' }} onClick={handleTest}>Quiz</Button>\r\n        {feature==\"dictionary\"? <Button type=\"primary\" onClick={() => {setShowData(allData)}}>Show all words</Button>: <></>}\r\n      </Space>\r\n      <Modal title=\"How many problems do you want\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n        <Input value={problemsNum} onChange={(e) => {setProblemsNum(e.target.value)}}></Input>\r\n      </Modal>\r\n      <Modal title=\"Quiz finished\" visible={isModalVisible_2} onOk={handleOk_2} onCancel={handleCancel_2} okText={\"again!\"} cancelText={\"back to dictionary\"}>\r\n        <h1>{`Congratulations! Your score is ${score}/${problemsNum}`}</h1>\r\n      </Modal>\r\n      {feature==\"dictionary\"? dictionary: test}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Learning;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n  Layout,\r\n  Menu,\r\n  Descriptions,\r\n  DatePicker,\r\n  InputNumber,\r\n  Radio,\r\n  Table,\r\n  Alert,\r\n  message,\r\n  Modal\r\n} from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  SettingOutlined,\r\n  SmileOutlined,\r\n  DollarOutlined,\r\n  EyeInvisibleOutlined,\r\n  AuditOutlined,\r\n  AlertOutlined,\r\n  PieChartOutlined,\r\n  AccountBookOutlined,\r\n  AimOutlined,\r\n  ReadOutlined,\r\n  TeamOutlined,\r\n  CarOutlined,\r\n  KeyOutlined,\r\n  ToolOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"./api.js\";\r\nimport moment from \"moment\";\r\nimport { sum } from \"lodash\";\r\nimport Memo from \"./memo.js\"\r\nimport Learning from \"./learning.js\";\r\n\r\nfunction App() {\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  /* PageState 為顯示的界面 */\r\n  const [PageState, setPageState] = useState(\"Welcome\");\r\n\r\n  /* LoginUserID , LoginUserPassword 為登入 input 欄位中的帳密 */\r\n  const [LoginUserID, setLoginUserID] = useState(\"\");\r\n  const [LoginUserPassword, setLoginUserPassword] = useState(\"\");\r\n\r\n  /* 註冊 input 欄位中的帳密及基本資料 */\r\n  const [SignupUserID, setSignupUserID] = useState(\"\");\r\n  const [SignupUserPassword, setSignupUserPassword] = useState(\"\");\r\n  const [SignupNickname, setSignupNickname] = useState(\"\");\r\n  const [SignupSchool, setSignupSchool] = useState(\"\");\r\n  const [SignupBirthday, setSignupBirthday] = useState([\"\", \"\", \"\"]);\r\n  const [SignupAboutMe, setSignupAboutMe] = useState(\"\");\r\n\r\n  /* HasLogin 為目前已經登入 */\r\n  const [HasLogin, setHasLogin] = useState(false);\r\n\r\n  /* 目前已經登入的使用者的帳密及基本資料 */\r\n  const [NowUserID, setNowUserID] = useState(\"\");\r\n  const [NowUserPassword, setNowUserPassword] = useState(\"\");\r\n  const [NowNickname, setNowNickname] = useState(\"\");\r\n  const [NowSchool, setNowSchool] = useState(\"\");\r\n  const [NowBirthday, setNowBirthday] = useState([\"\", \"\", \"\"]);\r\n  const [NowAboutMe, setNowAboutMe] = useState(\"\");\r\n\r\n  /* OldUserPassword , NewUserPassword 為使用者改密碼時的的舊/新密碼 */\r\n  const [OldUserPassword, setOldUserPassword] = useState(\"\");\r\n  const [NewUserPassword, setNewUserPassword] = useState(\"\");\r\n\r\n  /* 顯示在底部 ( footer ) 的系統訊息和文字顏色 */\r\n  const [SystemMessage, setSystemMessage] = useState(\"Welcome to MM_2021alpha\");\r\n  const [SystemDescription, setSystemDescription] = useState(\r\n    \"Please login or signup first\"\r\n  );\r\n  const [SystemMessageType, setSystemMessageType] = useState(\"success\");\r\n\r\n  /*側邊選單的Logo和收起/展開狀態，預設為展開*/\r\n  const [SiderLogo, setSiderLogo] = useState(\"      \");\r\n  const [SiderOnCollapse, setSiderOnCollapse] = useState(false);\r\n\r\n  /* 新增一筆記帳時輸入的資訊*/\r\n  const [NewCostTitle, setNewCostTitle] = useState(\"\");\r\n  const [NewCostIsOutcome, setNewCostIsOutcome] = useState(true);\r\n  const [NewCostMoney, setNewCostMoney] = useState(0);\r\n  const [NewCostTag, setNewCostTag] = useState(\"\");\r\n  const [NewCostDay, setNewCostDay] = useState([\"\", \"\", \"\"]);\r\n\r\n  /* 使用者改個人資料時的的新資料 */\r\n  const [NewNickname, setNewNickname] = useState(\"\");\r\n  const [NewSchool, setNewSchool] = useState(\"\");\r\n  const [NewBirthday, setNewBirthday] = useState([\"\", \"\", \"\"]);\r\n  const [NewAboutMe, setNewAboutMe] = useState(\"\");\r\n\r\n  /* 當前使用者的所有記帳紀錄 */\r\n  const [MyCost, setMyCost] = useState([]);\r\n  /* 當前使用者的所有備忘錄 */\r\n  const [MemoData, setMemoData] = useState([]);\r\n  const resetTodo = async (UserID) => {\r\n    const { data } = await axios.post(\"/api/allTodo\", { user: UserID });\r\n    console.log(\"Todos: \", data.Todos);\r\n    setMemoData(data.Todos);\r\n  }\r\n  /* 當前使用者的所有單字 */\r\n  const [WordData, setWordData] = useState([]);\r\n  const resetWord = async (UserID) => {\r\n    const { data } = await axios.post(\"/api/allWord\", { user: UserID });\r\n    console.log(\"Words: \", data.words);\r\n    setWordData(data.words);\r\n  }\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  /*註冊新用戶(2/4)*/\r\n  const handleCreateNewUser = async () => {\r\n    console.log(\"FrontendNowCreateNewUser\");\r\n    const {\r\n      data: { Message, SignupSuccess },\r\n    } = await axios.post(\"/api/CreateNewUser\", {\r\n      SignupUserID,\r\n      SignupUserPassword,\r\n      SignupNickname,\r\n      SignupSchool,\r\n      SignupBirthday,\r\n      SignupAboutMe,\r\n    });\r\n    console.log(Message);\r\n    if (SignupSuccess === \"true\") {\r\n      setSystemMessage(\"Signup success!! \\n Now you can login and start!!\");\r\n      setIsModalVisible(true);\r\n      setSystemDescription(\"Now you can login and start!!\");\r\n      setSystemMessageType(\"success\");\r\n      //初始化學習功能的字典\r\n      const { data } = await axios.post(\"/api/initWord\", { user: SignupUserID });\r\n      console.log(data.message);\r\n    } else {\r\n      setSystemMessage(Message);\r\n      setIsModalVisible(true);\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  /*舊用戶登入(2/4)*/\r\n  const handleUsersLogin = async () => {\r\n    console.log(\"FrontendNowUserLogin\");\r\n    const {\r\n      data: {\r\n        Message,\r\n        LoginSuccess,\r\n        UserID,\r\n        UserPassword,\r\n        Nickname,\r\n        School,\r\n        Birthday,\r\n        AboutMe,\r\n      },\r\n    } = await axios.post(\"/api/UserLogin\", { LoginUserID, LoginUserPassword });\r\n    console.log(Message);\r\n\r\n    if (LoginSuccess === \"true\") {\r\n      setHasLogin(true);\r\n      setPageState(\"PersonalInfo\");\r\n      setNowUserID(UserID);\r\n      setNowUserPassword(UserPassword);\r\n      setNowNickname(Nickname);\r\n      setNowSchool(School);\r\n      setNowBirthday([\r\n        Birthday.split(\",\")[0],\r\n        Birthday.split(\",\")[1],\r\n        Birthday.split(\",\")[2],\r\n      ]);\r\n      setNowAboutMe(AboutMe);\r\n      setSystemMessage(\"Login success!!\");\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"success\");\r\n      //query todos\r\n      resetTodo(UserID);\r\n      //query words\r\n      resetWord(UserID);\r\n      message.success(\"Login success!\");\r\n\r\n    } else {\r\n      setSystemMessage(\"Login failed!!\");\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"error\");\r\n      message.error(\"Login fail!\");\r\n    }\r\n  };\r\n\r\n  /*刪除所有使用者(2/4)*/\r\n  const handleDeleteAllUsers = async () => {\r\n    console.log(\"FrontendNowDeleteAllUser\");\r\n    const {\r\n      data: { Message },\r\n    } = await axios.delete(\"/api/DeleteAllUsers\");\r\n    console.log(Message);\r\n    setSystemMessage(\"All users has been deleted\");\r\n    setSystemDescription(\"User DB is empty now\");\r\n    setSystemMessageType(\"info\");\r\n  };\r\n\r\n  /*修改個人資料(2/4)*/\r\n  const handleChangePersonalInfo = async () => {\r\n    console.log(\"FrontendNowChangePersonalInfo\");\r\n    const {\r\n      data: { Message, ChangePersonalInfoSuccess },\r\n    } = await axios.post(\"/api/ChangePersonalInfo\", {\r\n      NowUserID,\r\n      NewNickname,\r\n      NewSchool,\r\n      NewBirthday,\r\n      NewAboutMe,\r\n    });\r\n    console.log(Message);\r\n    if (ChangePersonalInfoSuccess === \"true\") {\r\n      setNowNickname(NewNickname);\r\n      setNowSchool(NewSchool);\r\n      setNowBirthday(NewBirthday);\r\n      setNowAboutMe(NewAboutMe);\r\n      setSystemMessage(\"Change PersonalInfo success !!\");\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"success\");\r\n    } else {\r\n      setSystemMessage(\"Change PersonalInfo failed !!\");\r\n      setSystemDescription(\"Some error happens !!\");\r\n      setSystemMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  /*修改密碼(2/4)*/\r\n  const handleChangePassword = async () => {\r\n    console.log(\"FrontendNowChangePassword\");\r\n    const {\r\n      data: { Message, ChangePasswordSuccess },\r\n    } = await axios.post(\"/api/ChangePassword\", {\r\n      NowUserID,\r\n      OldUserPassword,\r\n      NewUserPassword,\r\n    });\r\n    console.log(Message);\r\n    if (ChangePasswordSuccess === \"true\") {\r\n      setNowUserPassword(NewUserPassword);\r\n      setSystemMessage(\"Change Password success !!\");\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"success\");\r\n    } else {\r\n      setSystemMessage(\"Change Password failed !!\");\r\n      setSystemDescription(\"Some error happens !!\");\r\n      setSystemMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  /*新增一筆記帳(2/4)*/\r\n  const handleCreateNewCost = async () => {\r\n    console.log(\"FrontendNowCreateNewCost\");\r\n\r\n    const {\r\n      data: { Message, CreateNewCostSuccess },\r\n    } = await axios.post(\"/api/CreateNewCost\", {\r\n      NowUserID,\r\n      NewCostTitle,\r\n      NewCostIsOutcome,\r\n      NewCostMoney,\r\n      NewCostTag,\r\n      NewCostDay,\r\n    });\r\n    console.log(Message);\r\n\r\n    if (CreateNewCostSuccess === \"true\") {\r\n      setSystemMessage(\"New Cost has been created\");\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"success\");\r\n    } else {\r\n      setSystemMessage(\"New Cost creating failed\");\r\n      setSystemDescription(\"Some error happens !!\");\r\n      setSystemMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  /*從資料庫取得目前使用者記帳紀錄(2/4)*/\r\n  const handleCheckMyCost = async () => {\r\n    console.log(\"FrontendNowCheckMyCost\");\r\n    const {\r\n      data: { Message, CheckMyCostSuccess, AllMyCost },\r\n    } = await axios.post(\"/api/CheckMyCost\", { NowUserID });\r\n    console.log(Message);\r\n\r\n    if (CheckMyCostSuccess === \"true\") {\r\n      setMyCost(\r\n        AllMyCost.map((e) => [\r\n          e.Title,\r\n          e.IsOutcome,\r\n          e.Money,\r\n          e.Tag,\r\n          e.Day,\r\n          e._id,\r\n        ])\r\n      );\r\n      setSystemMessage(\"You can check your cost here\");\r\n      setSystemDescription(Message);\r\n      setSystemMessageType(\"success\");\r\n    } else {\r\n      setSystemMessage(\"Can't get data from DB \");\r\n      setSystemDescription(\"Some error happens !!\");\r\n      setSystemMessageType(\"error\");\r\n    }\r\n  };\r\n\r\n  /* 刪除個人所有記帳紀錄(2/4) */\r\n  const handleDeleteMyCost = async () => {\r\n    console.log(\"FrontendNowDeleteMyCost\");\r\n    const {\r\n      data: { Message },\r\n    } = await axios.post(\"/api/DeleteMyCost\", { NowUserID });\r\n    console.log(Message);\r\n    setSystemMessage(\"Delete my cost success\");\r\n    setSystemDescription(Message);\r\n    setSystemMessageType(\"info\");\r\n  };\r\n\r\n  /*刪除所有用戶所有記帳(2/4)*/\r\n  const handleDeleteAllCosts = async () => {\r\n    console.log(\"FrontendNowDeleteAllCosts\");\r\n    const {\r\n      data: { Message },\r\n    } = await axios.delete(\"/api/DeleteAllCosts\");\r\n    console.log(Message);\r\n    setSystemMessage(\"Delete all cost success\");\r\n    setSystemDescription(\"Cost DB is empty now\");\r\n    setSystemMessageType(\"info\");\r\n  };\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  //處理月份英文名稱到數字的轉換\r\n  const MonthToNumber = (Month) => {\r\n    if (Month === \"Jan\") {\r\n      return \"01\";\r\n    }\r\n    if (Month === \"Feb\") {\r\n      return \"02\";\r\n    }\r\n    if (Month === \"Mar\") {\r\n      return \"03\";\r\n    }\r\n    if (Month === \"Apr\") {\r\n      return \"04\";\r\n    }\r\n    if (Month === \"May\") {\r\n      return \"05\";\r\n    }\r\n    if (Month === \"Jun\") {\r\n      return \"06\";\r\n    }\r\n    if (Month === \"Jul\") {\r\n      return \"07\";\r\n    }\r\n    if (Month === \"Aug\") {\r\n      return \"08\";\r\n    }\r\n    if (Month === \"Sep\") {\r\n      return \"09\";\r\n    }\r\n    if (Month === \"Oct\") {\r\n      return \"10\";\r\n    }\r\n    if (Month === \"Nov\") {\r\n      return \"11\";\r\n    }\r\n    if (Month === \"Dec\") {\r\n      return \"12\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  //處理側邊選單收起/展開時Logo的改變\r\n  const handleSiderCollapse = () => {\r\n    if (!SiderOnCollapse) {\r\n      setSiderOnCollapse(true);\r\n      setSiderLogo(\" \");\r\n    } else {\r\n      setSiderOnCollapse(false);\r\n      setSiderLogo(\"      \");\r\n    }\r\n  };\r\n\r\n  //計算使用者記帳的總支出和收入\r\n  const handleTotalOutcome = (MyCost) => {\r\n    return sum(MyCost.map((e) => (e[1] ? e[2] : 0)));\r\n  };\r\n\r\n  const handleTotalIncome = (MyCost) => {\r\n    return sum(MyCost.map((e) => (!e[1] ? e[2] : 0)));\r\n  };\r\n\r\n  //useEffect( () => { console.log( \"\" ) } )\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  //登入前歡迎頁面\r\n  const WelcomePage = (\r\n    <Layout.Content>\r\n      <div /* 輸入使用者帳號 */>\r\n        <p>To Login , Please Enter Your ID</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setLoginUserID(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your UserID\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n      </div>\r\n      <div /* 輸入使用者密碼 */>\r\n        <p>Please Enter Your Password</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setLoginUserPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your Password\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n      </div>\r\n      <div /* 舊用戶登入(1/4) */>\r\n        <Button\r\n          onClick={handleUsersLogin}\r\n          disabled={!LoginUserID || !LoginUserPassword}\r\n          type=\"primary\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </div>\r\n      <div /* 註冊按鈕 */>\r\n        <p>First Time To エムエム ? Please Signup First</p>\r\n        <Button\r\n          onClick={() => {\r\n            setPageState(\"Signup\");\r\n            setSignupUserID(\"\");\r\n            setSignupUserPassword(\"\");\r\n            setSignupNickname(\"\");\r\n            setSignupSchool(\"\");\r\n            setSignupBirthday([\"\", \"\", \"\"]);\r\n            setSignupAboutMe(\"\");\r\n            setSystemMessage(\"Welcome to sign up エムエム\");\r\n            setSystemDescription(\"Please enter your info.\");\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n          type=\"primary\"\r\n        >\r\n          Signup\r\n        </Button>\r\n      </div>\r\n      \r\n    </Layout.Content>\r\n  );\r\n\r\n  //已登入的主頁面🛠️🛠️🛠️🛠️🛠️🛠️🛠️需要施工🛠️🛠️🛠️🛠️🛠️🛠️🛠️🛠️🛠️\r\n  const LoginPage = (\r\n    <Layout.Content>\r\n      <h1 style={{ fontSize: \"2rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"0\", marginTop: \"0.5rem\" }}>Welcome back {NowUserID} Please choose the service </h1>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //註冊頁面\r\n  const SignupPage = (\r\n    <Layout.Content>\r\n      <p>Welcome Using our App</p>\r\n      <p>This is Signup Page</p>\r\n      <div /* 註冊輸入帳號 */>\r\n        <p>Please Enter Your ID *</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setSignupUserID(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your UserId\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n      </div>\r\n      <div /* 註冊輸入密碼 */>\r\n        <p>Please Enter Your Password *</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setSignupUserPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your UserPassword\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n      </div>\r\n      <div /* 註冊輸入暱稱 */>\r\n        <p>Please Enter Your Nickname *</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setSignupNickname(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your Nickname\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n      </div>\r\n      <div /* 註冊輸入學校 */>\r\n        <p>Please Enter Your School</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setSignupSchool(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your School (optional)\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n      </div>\r\n      <div /* 註冊輸入生日 */>\r\n        <p>Please Enter Your Birthday</p>\r\n        <DatePicker\r\n          onChange={(e) => {\r\n            !e\r\n              ? setSignupBirthday([\"\", \"\", \"\"])\r\n              : setSignupBirthday([\r\n                String(e).split(\" \")[3],\r\n                MonthToNumber(String(e).split(\" \")[1]),\r\n                String(e).split(\" \")[2],\r\n              ]);\r\n          }}\r\n          placeholder=\"Enter your Birthday (optional)\"\r\n          style={{ width: \"500px\" }}\r\n        />\r\n      </div>\r\n\r\n      <div /* 註冊輸入個人簡介 */>\r\n        <p>We want to know you more,please enter something</p>\r\n        <Input.TextArea\r\n          onChange={(e) => {\r\n            setSignupAboutMe(e.target.value);\r\n          }}\r\n          placeholder=\"About me ... (optional)\"\r\n          rows={3}\r\n        />\r\n      </div>\r\n\r\n      <div /* 註冊新用戶(1/4) */>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleCreateNewUser}\r\n          disabled={!SignupUserID || !SignupUserPassword || !SignupNickname}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n      <div /* 放棄註冊 */>\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={() => {\r\n            setPageState(\"Welcome\");\r\n            setLoginUserID(\"\");\r\n            setLoginUserPassword(\"\");\r\n            setSystemMessage(\"Welcome to MM_2021alpha\");\r\n            setSystemDescription(\r\n              \"You can login if you already have a account.\"\r\n            );\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n        >\r\n          Go back\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //個人資訊頁面\r\n  const PersonalInfoPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"1rem\", marginTop: \"0.5rem\" }}>About You</p>\r\n      <Descriptions bordered column={1} style={{ width: \"98%\", marginLeft: \"1%\", marginLeft: \"1%\" }}>\r\n        <Descriptions.Item label=\"UserId\">{NowUserID}</Descriptions.Item>\r\n        <Descriptions.Item label=\"Password\">\r\n          {NowUserPassword}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Nickname\">{NowNickname}</Descriptions.Item>\r\n        <Descriptions.Item label=\"School\">\r\n          {NowSchool === \"\" ? \"Not Set\" : NowSchool}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Birthday\">\r\n          {NowBirthday[0] === \"\"\r\n            ? \"Not Set\"\r\n            : `${NowBirthday[0]}-${NowBirthday[1]}-${NowBirthday[2]}`}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"About me\">\r\n          {NowAboutMe === \"\" ? \"Not Set\" : NowAboutMe}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //備忘錄頁面\r\n  const MemoPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"0\", marginTop: \"0.5rem\" }}>Memo</p>\r\n      <Memo user={NowUserID} axios={axios} data={MemoData}></Memo>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //記帳本頁面\r\n  const SpendingPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"0\", marginTop: \"0.5rem\" }}>Spending</p>\r\n      <div>\r\n        <Button\r\n          style={{ marginBottom: \"5px\", marginTop: \"5px\", marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            setPageState(\"NewCost\");\r\n            setNewCostTitle(\"\");\r\n            setNewCostMoney(\"\");\r\n            setNewCostTag(\"\");\r\n            setNewCostDay([\r\n              String(Date()).split(\" \")[3],\r\n              MonthToNumber(String(Date()).split(\" \")[1]),\r\n              String(Date()).split(\" \")[2],\r\n            ]);\r\n            setNewCostIsOutcome(true);\r\n            setSystemMessage(\"You can record your income or outcome here\");\r\n            setSystemDescription(\"Please enter some detail about the cost.\");\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n          type=\"danger\"\r\n        >\r\n          Create New Cost\r\n        </Button>\r\n      </div>\r\n      <div /*從資料庫取得目前使用者記帳紀錄(1/4)*/>\r\n        <Button\r\n          style={{ marginBottom: \"5px\", marginTop: \"5px\", marginLeft: \"10px\" }}\r\n          onClick={() => {\r\n            setPageState(\"CheckMyCost\");\r\n            handleCheckMyCost(NowUserID);\r\n          }}\r\n          type=\"primary\"\r\n        >\r\n          Check My Cost\r\n        </Button>\r\n      </div>\r\n      <div /* 刪除個人所有記帳紀錄(1/4) */>\r\n        <Button\r\n          style={{ marginBottom: \"5px\", marginTop: \"5px\", marginLeft: \"10px\" }}\r\n          onClick={handleDeleteMyCost} type=\"danger\">\r\n          Delete My Cost\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //新增一筆記帳頁面\r\n  const NewCostPage = (\r\n    <Layout.Content>\r\n      <p>This is NewCost Page</p>\r\n      <p>Please Enter Your Cost Title*</p>\r\n      <Input\r\n        onChange={(e) => {\r\n          setNewCostTitle(e.target.value);\r\n        }}\r\n        placeholder=\"Enter your Cost Title\"\r\n        prefix={<AccountBookOutlined />}\r\n      />\r\n      <p>Please Enter Your Cost Money*</p>\r\n      <InputNumber\r\n        addonBefore={\r\n          <Radio.Group\r\n            onChange={(e) => {\r\n              setNewCostIsOutcome(e.target.value);\r\n            }}\r\n            value={NewCostIsOutcome}\r\n          >\r\n            <Radio value={true}>OutCome</Radio>\r\n            <Radio value={false}>Income</Radio>\r\n          </Radio.Group>\r\n        }\r\n        onChange={(e) => {\r\n          !e ? setNewCostMoney(0) : setNewCostMoney(e);\r\n        }}\r\n        placeholder=\"Enter your Cost Money\"\r\n        style={{ width: \"500px\" }}\r\n      />\r\n      <p>Please Enter Your Cost Tag</p>\r\n      <Input\r\n        onChange={(e) => {\r\n          setNewCostTag(e.target.value);\r\n        }}\r\n        placeholder=\"Enter your Tag\"\r\n        prefix={<AimOutlined />}\r\n      />\r\n      <p>Please Enter Your Cost Day</p>\r\n      <DatePicker\r\n        onChange={(e) => {\r\n          !e\r\n            ? setNewCostDay([\r\n              String(Date()).split(\" \")[3],\r\n              MonthToNumber(String(Date()).split(\" \")[1]),\r\n              String(Date()).split(\" \")[2],\r\n            ])\r\n            : setNewCostDay([\r\n              String(e).split(\" \")[3],\r\n              MonthToNumber(String(e).split(\" \")[1]),\r\n              String(e).split(\" \")[2],\r\n            ]);\r\n        }}\r\n        placeholder=\"Enter your Cost Day, left blank is today\"\r\n        style={{ width: \"500px\" }}\r\n      />\r\n      <div /* 新增一筆記帳(1/4) */>\r\n        <Button\r\n          onClick={handleCreateNewCost}\r\n          type=\"danger\"\r\n          disabled={!NewCostTitle || !NewCostMoney}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //使用者記帳紀錄頁面\r\n  const CheckMyCostPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"0\", marginTop: \"0.5rem\" }}>Accouting</p>\r\n      <Table\r\n        columns={[\r\n          { title: \"Title\", dataIndex: \"title\" },\r\n          {\r\n            title: \"Type\",\r\n            dataIndex: \"isoutcome\",\r\n            filters: [\r\n              { text: \"Outcome\", value: \"Outcome\" },\r\n              { text: \"Income\", value: \"Income\" },\r\n            ],\r\n            onFilter: (value, record) => record.isoutcome.includes(value),\r\n          },\r\n          { title: \"Money\", dataIndex: \"money\" },\r\n          { title: \"Tag\", dataIndex: \"tag\" },\r\n          {\r\n            title: \"Day\",\r\n            dataIndex: \"day\",\r\n            sorter: (a, b) =>\r\n              `${a.day.split(\"-\")[0]}${a.day.split(\"-\")[1]}${a.day.split(\"-\")[2]\r\n              }` -\r\n              `${b.day.split(\"-\")[0]}${b.day.split(\"-\")[1]}${b.day.split(\"-\")[2]\r\n              }`,\r\n          },\r\n        ]}\r\n        dataSource={MyCost.map((e) => ({\r\n          title: e[0],\r\n          isoutcome: e[1] === true ? \"Outcome\" : \"Income\",\r\n          money: e[2],\r\n          tag: e[3],\r\n          day: `${e[4][0]}-${e[4][1]}-${e[4][2]}`,\r\n          key: e,\r\n        }))}\r\n      />\r\n      <Alert\r\n        message={`Your total outcome is : ${handleTotalOutcome(MyCost)}`}\r\n        type=\"info\"\r\n        showIcon\r\n      />\r\n      <Alert\r\n        message={`Your total income is : ${handleTotalIncome(MyCost)}`}\r\n        type=\"info\"\r\n        showIcon\r\n      />\r\n      <Alert\r\n        message={`Your net debt is : ${handleTotalOutcome(MyCost) - handleTotalIncome(MyCost)\r\n          }`}\r\n        type=\"info\"\r\n        showIcon\r\n      />\r\n    </Layout.Content>\r\n  );\r\n\r\n  //聊天室頁面🛠️🛠️🛠️🛠️🛠️🛠️🛠️需要施工🛠️🛠️🛠️🛠️🛠️🛠️🛠️🛠️🛠️\r\n  const ChatroomPage = (\r\n    <Layout.Content>\r\n      <p>This is Chatroom Page</p>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //學習功能頁面🛠️🛠️🛠️🛠️🛠️🛠️🛠️需要施工🛠️🛠️🛠️🛠️🛠️🛠️🛠️🛠️🛠️\r\n  const LearningPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"0\", marginTop: \"0.5rem\" }}>Learning</p>\r\n      <Learning user={NowUserID} axios={axios} data={WordData}></Learning>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //一般設定頁面\r\n  const NormalSettingPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"1rem\", marginTop: \"0.5rem\" }}>Changing Personal Info</p>\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setPageState(\"ChangePersonalInfo\");\r\n            setNewNickname(NowNickname);\r\n            setNewSchool(NowSchool);\r\n            setNewBirthday(NowBirthday);\r\n            setNewAboutMe(NowAboutMe);\r\n            setSystemMessage(\"You can change your PersonalInfo here\");\r\n            setSystemDescription(\"* implies needed\");\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n          type=\"danger\"\r\n          icon={<KeyOutlined />}\r\n        >\r\n          ChangePersonalInfo\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //修改個人資料頁面\r\n  const ChangePersonalInfoPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"1rem\", marginTop: \"0.5rem\" }}>Changing Personal Info</p>\r\n      <div /* 修改個人資料(1/4) */>\r\n        <p>You can change your Nickname here*</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setNewNickname(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your NewNickname\"\r\n          defaultValue={NowNickname}\r\n          prefix={<EyeInvisibleOutlined />}\r\n        />\r\n        <p>You can change your School here</p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setNewSchool(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your NewSchool (optional) \"\r\n          defaultValue={NowSchool}\r\n          prefix={<EyeInvisibleOutlined />}\r\n        />\r\n        <p>You can change your Birthday here</p>\r\n        <DatePicker\r\n          onChange={(e) => {\r\n            !e\r\n              ? setNewBirthday([\"\", \"\", \"\"])\r\n              : setNewBirthday([\r\n                String(e).split(\" \")[3],\r\n                MonthToNumber(String(e).split(\" \")[1]),\r\n                String(e).split(\" \")[2],\r\n              ]);\r\n          }}\r\n          placeholder=\"Enter your Birthday (optional)\"\r\n          defaultValue={\r\n            !NowBirthday[0]\r\n              ? null\r\n              : moment(\r\n                `${NowBirthday[0]}-${NowBirthday[1]}-${NowBirthday[2]}`,\r\n                \"YYYY-MM-DD\"\r\n              )\r\n          }\r\n          style={{ width: \"500px\" }}\r\n        />\r\n        <p>You can change your own Signature!</p>\r\n        <Input.TextArea\r\n          onChange={(e) => {\r\n            setNewAboutMe(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your NewAboutMe (optional) \"\r\n          defaultValue={NowAboutMe}\r\n          rows={3}\r\n        />\r\n        <Button\r\n          onClick={handleChangePersonalInfo}\r\n          disabled={!NewNickname}\r\n          type=\"primary\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //帳號設定頁面\r\n  const AccountSettingPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"1rem\", marginTop: \"0.5rem\" }}>Change Password</p>\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            setPageState(\"ChangePassword\");\r\n            setOldUserPassword(\"\");\r\n            setNewUserPassword(\"\");\r\n            setSystemMessage(\"You can change your password here\");\r\n            setSystemDescription(\"Please enter your old and new PW\");\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n          type=\"danger\"\r\n          icon={<KeyOutlined />}\r\n        >\r\n          Change Password\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //修改密碼頁面\r\n  const ChangePasswordPage = (\r\n    <Layout.Content>\r\n      <p style={{ fontSize: \"3rem\", fontWeight: \"100\", textAlign: \"center\", lineHeight: \"3rem\", marginBottom: \"1rem\", marginTop: \"0.5rem\" }}>Change Password</p>\r\n      <div /* 修改密碼(1/4) */>\r\n        <p>Change your password here</p>\r\n        <p>Please your Old password </p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setOldUserPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your OldPassword\"\r\n          prefix={<UserOutlined />}\r\n        />\r\n        <p>Please your New password </p>\r\n        <Input\r\n          onChange={(e) => {\r\n            setNewUserPassword(e.target.value);\r\n          }}\r\n          placeholder=\"Enter your NewPassword\"\r\n          prefix={<EyeInvisibleOutlined />}\r\n        />\r\n        <Button\r\n          onClick={handleChangePassword}\r\n          disabled={!OldUserPassword || !NewUserPassword}\r\n          type=\"primary\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  //登出確認頁面\r\n  const SignoutPage = (\r\n    <Layout.Content>\r\n      <p>Are you sure to sign out ?</p>\r\n      <div>\r\n        <Button\r\n          type=\"danger\"\r\n          onClick={() => {\r\n            setPageState(\"Welcome\");\r\n            setLoginUserID(\"\");\r\n            setLoginUserPassword(\"\");\r\n            setHasLogin(false);\r\n            setNowUserID(\"\");\r\n            setNowUserPassword(\"\");\r\n            setNowNickname(\"\");\r\n            setNowSchool(\"\");\r\n            setNowBirthday([\"\", \"\", \"\"]);\r\n            setNowAboutMe(\"\");\r\n            setSystemMessage(\"Welcome to MM_2021alpha\");\r\n            setSystemDescription(\"You are signup\");\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n          icon={<CarOutlined />}\r\n        >\r\n          Yes\r\n        </Button>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            setSystemMessage(\"Thanks for Staying\");\r\n            setSystemDescription(\"\");\r\n            setSystemMessageType(\"success\");\r\n          }}\r\n          icon={<CarOutlined />}\r\n        >\r\n          No\r\n        </Button>\r\n      </div>\r\n    </Layout.Content>\r\n  );\r\n\r\n  ///////////////////////////////////////////////////////////////////////////////\r\n\r\n  //側邊的選單，登入前只有welcome，登入後可選功能\r\n  const PageSider = () => {\r\n    if (HasLogin === false) {\r\n      return (\r\n        <Layout.Sider\r\n          collapsible\r\n          onCollapse={handleSiderCollapse}\r\n          style={{ background: \"#98BAE7\", height: \"auto\" }}\r\n        >\r\n          <p>MM_2021_Alpha</p>\r\n        </Layout.Sider>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout.Sider\r\n          collapsible\r\n          onCollapse={handleSiderCollapse}\r\n        >\r\n          <p\r\n            style={\r\n              SiderOnCollapse\r\n                ? { fontSize: \"50px\", lineHeight: \"10px\", marginTop: \"2rem\", textAlign: \"center\" }\r\n                : { fontSize: \"30px\", lineHeight: \"0px\", marginTop: \"2rem\", textAlign: \"center\" }\r\n            }\r\n          >\r\n            {SiderLogo}\r\n          </p>\r\n          <Menu\r\n            theme=\"dark\" /* 各種功能和登出按鈕 */\r\n            defaultSelectedKeys={[\"PersonalInfo\"]}\r\n            mode=\"inline\"\r\n          >\r\n            <Menu.Item\r\n              onClick={() => {\r\n                setPageState(\"PersonalInfo\");\r\n                setSystemMessage(\"This is PersonalInfo Page\");\r\n                setSystemDescription(\"You can modify them in account setting\");\r\n                setSystemMessageType(\"success\");\r\n              }}\r\n              key=\"PersonalInfo\"\r\n              icon={<UserOutlined />}\r\n            >\r\n              Personal Info\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                setPageState(\"Memo\");\r\n                setSystemMessage(\"This is Memo Page\");\r\n                setSystemDescription(\"\");\r\n                setSystemMessageType(\"success\");\r\n              }}\r\n              key=\"Memo\"\r\n              icon={<AuditOutlined />}\r\n            >\r\n              Memo\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                setPageState(\"Spending\");\r\n                setSystemMessage(\"This is Spending Page\");\r\n                setSystemDescription(\"You can manage your cost here.\");\r\n                setSystemMessageType(\"success\");\r\n              }}\r\n              key=\"Spending\"\r\n              icon={<DollarOutlined />}\r\n            >\r\n              Spending\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              onClick={() => {\r\n                setPageState(\"Learning\");\r\n                setSystemMessage(\"This is Learning Page\");\r\n                setSystemDescription(\"\");\r\n                setSystemMessageType(\"success\");\r\n              }}\r\n              key=\"Learning\"\r\n              icon={<ReadOutlined />}\r\n            >\r\n              Learning\r\n            </Menu.Item>\r\n\r\n            <Menu.SubMenu /* 設定的子選單，分為一般設定（改界面和使用者基本資料）跟帳號設定（改密碼）*/\r\n              title=\"Setting\"\r\n              key=\"Setting\"\r\n              icon={<SettingOutlined />}\r\n            >\r\n              <Menu.Item\r\n                onClick={() => {\r\n                  setPageState(\"ChangePersonalInfo\");\r\n                  setNewNickname(NowNickname);\r\n                  setNewSchool(NowSchool);\r\n                  setNewBirthday(NowBirthday);\r\n                  setNewAboutMe(NowAboutMe);\r\n                  setSystemMessage(\"You can change your PersonalInfo here\");\r\n                  setSystemDescription(\"* implies needed\");\r\n                  setSystemMessageType(\"success\");\r\n                }}\r\n                key=\"NormalSetting\"\r\n                icon={<PieChartOutlined />}\r\n              >\r\n                NormalSetting\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                onClick={() => {\r\n                  setPageState(\"ChangePassword\");\r\n                  setOldUserPassword(\"\");\r\n                  setNewUserPassword(\"\");\r\n                  setSystemMessage(\"You can change your password here\");\r\n                  setSystemDescription(\"Please enter your old and new PW\");\r\n                  setSystemMessageType(\"success\");\r\n                }}\r\n                key=\"AccountSetting\"\r\n                icon={<ToolOutlined />}\r\n              >\r\n                AccountSetting\r\n              </Menu.Item>\r\n            </Menu.SubMenu>\r\n\r\n            <Menu.Item\r\n              onClick={() => {\r\n                setIsModalVisible_2(true);\r\n              }}\r\n              key=\"Signout\"\r\n              icon={<CarOutlined />}\r\n            >\r\n              Signout\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Layout.Sider>\r\n      );\r\n    }\r\n  };\r\n\r\n  //目前頁面內容\r\n  const NowPageContent = () => {\r\n    if (PageState === \"Welcome\") {\r\n      return WelcomePage;\r\n    } else if (PageState === \"Login\") {\r\n      return LoginPage;\r\n    } else if (PageState === \"Signup\") {\r\n      return SignupPage;\r\n    } else if (PageState === \"PersonalInfo\") {\r\n      return PersonalInfoPage;\r\n    } else if (PageState === \"Memo\") {\r\n      return MemoPage;\r\n    } else if (PageState === \"Spending\") {\r\n      return SpendingPage;\r\n    } else if (PageState === \"NewCost\") {\r\n      return NewCostPage;\r\n    } else if (PageState === \"CheckMyCost\") {\r\n      return CheckMyCostPage;\r\n    } else if (PageState === \"Chatroom\") {\r\n      return ChatroomPage;\r\n    } else if (PageState === \"Learning\") {\r\n      return LearningPage;\r\n    } else if (PageState === \"NormalSetting\") {\r\n      return NormalSettingPage;\r\n    } else if (PageState === \"ChangePersonalInfo\") {\r\n      return ChangePersonalInfoPage;\r\n    } else if (PageState === \"AccountSetting\") {\r\n      return AccountSettingPage;\r\n    } else if (PageState === \"ChangePassword\") {\r\n      return ChangePasswordPage;\r\n    } else if (PageState === \"Signout\") {\r\n      return SignoutPage;\r\n    }\r\n  };\r\n\r\n  //底部訊息，包含系統發送給前端的任何訊息\r\n  const PageFooter = () => {\r\n    return (\r\n      <Layout.Footer style={{ background: \"#B8E4F0\", height: \"auto\" }}>\r\n        <Alert\r\n          message={SystemMessage}\r\n          type={SystemMessageType}\r\n          showIcon\r\n          description={SystemDescription}\r\n        />\r\n      </Layout.Footer>\r\n    );\r\n  };\r\n  //彈出式視窗\r\n  //註冊新用戶的\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const handleOk = () => {\r\n    setIsModalVisible(false);\r\n    setPageState(\"Welcome\");\r\n  };\r\n  //登出的\r\n  const [isModalVisible_2, setIsModalVisible_2] = useState(false);\r\n  const handleOk_2 = () => {\r\n    setIsModalVisible_2(false);\r\n    setPageState(\"Welcome\");\r\n    setLoginUserID(\"\");\r\n    setLoginUserPassword(\"\");\r\n    setHasLogin(false);\r\n    setNowUserID(\"\");\r\n    setNowUserPassword(\"\");\r\n    setNowNickname(\"\");\r\n    setNowSchool(\"\");\r\n    setNowBirthday([\"\", \"\", \"\"]);\r\n    setNowAboutMe(\"\");\r\n    setSystemMessage(\"Welcome to MM_2021alpha\");\r\n    setSystemDescription(\"You are signup\");\r\n    setSystemMessageType(\"success\");\r\n  };\r\n\r\n  const handleCancel_2 = () => {\r\n    setIsModalVisible_2(false);\r\n  }\r\n  //回傳側邊選單+頁面內容+底部訊息\r\n  return (\r\n    <Layout>\r\n      {PageSider()}\r\n      <Layout style={{ height: \"100vh\", background: \"#CCDDEE\" }}>\r\n        {NowPageContent()}\r\n        {/*PageFooter()*/}\r\n      </Layout>\r\n      <Modal title=\"System message\" visible={isModalVisible} closable={false} footer={[<Button key=\"Got it\" onClick={handleOk}>Back to login page</Button>]}>\r\n        <h1>{SystemMessage}</h1>\r\n      </Modal>\r\n      <Modal title=\"System message\" visible={isModalVisible_2} closable={false}\r\n        onOk={handleOk_2} onCancel={handleCancel_2} okText={\"Yes\"} cancelText={\"No\"}>\r\n        <h1>Sure to signout?</h1>\r\n      </Modal>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  /*<React.StrictMode>*/\r\n  <App />,\r\n  /*</React.StrictMode>,*/\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}